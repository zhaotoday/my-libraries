{"version":3,"file":"index.js","sources":["../src/utils/consts.js","../src/utils/storage.js","../src/utils/page.js","../src/utils/currentPages.js","../src/utils/url.js","../src/utils/time.js","../src/utils/component.js","../src/utils/index.js","../src/helpers.js","../src/index.js"],"sourcesContent":["const prefix = 'mp_client__'\r\n\r\nexport default {\r\n  prefix\r\n}\r\n","import wx from '../wx'\r\n\r\n/**\r\n * 本地存储\r\n */\r\nexport default class Storage {\r\n  /**\r\n   * 构造方法\r\n   * @param key {string} 键\r\n   */\r\n  constructor (key) {\r\n    this.key = key\r\n  }\r\n\r\n  /**\r\n   * 设置 storage\r\n   * @param {string} value 值\r\n   */\r\n  set (value) {\r\n    wx.setStorageSync(this.key, value)\r\n  }\r\n\r\n  /**\r\n   * 获取 storage\r\n   * @returns {string}\r\n   */\r\n  get () {\r\n    return wx.getStorageSync(this.key) || ''\r\n  }\r\n\r\n  /**\r\n   * 移除 storage\r\n   * @returns {string}\r\n   */\r\n  remove () {\r\n    wx.removeStorageSync(this.key)\r\n  }\r\n\r\n  /**\r\n   * 清空 storage\r\n   */\r\n  clear () {\r\n    wx.clearStorageSync()\r\n  }\r\n}\r\n","import qs from 'qs'\r\n\r\nexport default {\r\n  toURL ({ route, options = {} }) {\r\n    return `/${route}${Object.keys(options).length ? `?${qs.stringify(options)}` : ''}`\r\n  }\r\n}\r\n","import consts from './consts'\r\nimport Storage from './storage'\r\nimport page from './page'\r\n\r\nconst storage = new Storage(`${consts.prefix}pages`)\r\nconst MAX_PAGES = 5\r\n\r\nexport default {\r\n  whiteList: [],\r\n  addWhiteList (list) {\r\n    this.whiteList = [...this.whiteList, ...list]\r\n  },\r\n  storePages () {\r\n    /* global getCurrentPages */\r\n    const currentPages = getCurrentPages()\r\n    const { route, options } = currentPages[currentPages.length - 1]\r\n\r\n    let storageValue = storage.get() || []\r\n\r\n    const ignore = () => this.whiteList.includes(route) ||\r\n      (storageValue.length > 0 && storageValue[storageValue.length - 1].route === route)\r\n\r\n    if (!ignore()) {\r\n      if (storageValue.length >= MAX_PAGES) {\r\n        storageValue.shift()\r\n      }\r\n\r\n      storageValue.push({\r\n        route,\r\n        options,\r\n        url: page.toURL({ route, options })\r\n      })\r\n\r\n      storage.set(storageValue)\r\n    }\r\n  },\r\n  getPages () {\r\n    return storage.get()\r\n  },\r\n  clearPages () {\r\n    storage.remove()\r\n  }\r\n}\r\n","export default {\r\n  encode (string) {\r\n    return encodeURIComponent(string)\r\n  },\r\n  decode (string) {\r\n    return decodeURIComponent(string)\r\n  }\r\n}\r\n","import dayjs from 'dayjs'\r\n\r\nconst DATE_FORMATTER = 'YYYY-MM-DD'\r\n\r\nexport default {\r\n  getDate (time) {\r\n    return dayjs(time).format(DATE_FORMATTER)\r\n  }\r\n}\r\n","export default {\r\n  getModifiersClass ({ block, defaultModifier = '', modifiers } = {}) {\r\n    return modifiers\r\n      ? modifiers.split(',').map(item => `${block}--${item}`).join(' ')\r\n      : `${block}${defaultModifier ? `--${defaultModifier}` : ''}`\r\n  }\r\n}\r\n","import consts from './consts'\r\nimport Storage from './storage'\r\nimport currentPages from './currentPages'\r\nimport url from './url'\r\nimport page from './page'\r\nimport time from './time'\r\nimport component from './component'\r\n\r\nexport default {\r\n  consts,\r\n  Storage,\r\n  currentPages,\r\n  url,\r\n  page,\r\n  time,\r\n  component\r\n}\r\n","export default {\r\n  /**\r\n   * 等待 n 毫秒\r\n   * @param {string} n 毫秒数\r\n   * @returns {Promise}\r\n   */\r\n  sleep (n) {\r\n    return new Promise(resolve => {\r\n      setTimeout(resolve, n)\r\n    })\r\n  }\r\n}\r\n","import wx from './wx'\r\nimport utils from './utils'\r\nimport helpers from './helpers'\r\n\r\nexport default {\r\n  wx,\r\n  utils,\r\n  helpers\r\n}\r\n"],"names":["prefix","Storage","key","value","setStorageSync","this","wx","getStorageSync","removeStorageSync","clearStorageSync","route","options","Object","keys","length","qs","stringify","storage","consts","MAX_PAGES","list","whiteList","currentPages","getCurrentPages","storageValue","get","_this","includes","shift","push","page","toURL","set","remove","string","encodeURIComponent","decodeURIComponent","DATE_FORMATTER","time","dayjs","format","block","defaultModifier","modifiers","split","map","item","join","n","Promise","resolve"],"mappings":"+KAAMA,OAAS,qBAEA,ogBCGMC,8BAKNC,+BACNA,IAAMA,kDAORC,MACAC,eAAeC,KAAKH,IAAKC,wCAQrBG,GAAGC,eAAeF,KAAKH,MAAQ,uCAQnCM,kBAAkBH,KAAKH,wCAOvBO,iCCxCQ,uBACJC,IAAAA,UAAOC,QAAAA,aAAU,eACbD,GAAQE,OAAOC,KAAKF,GAASG,WAAaC,GAAGC,UAAUL,GAAa,MCA7EM,QAAU,IAAIhB,QAAWiB,OAAOlB,gBAChCmB,UAAY,eAEH,WACF,yBACGC,QACPC,sCAAgBhB,KAAKgB,6BAAcD,sCAIlCE,EAAeC,oBACMD,EAAaA,EAAaR,OAAS,GAAtDJ,IAAAA,MAAOC,IAAAA,QAEXa,EAAeP,QAAQQ,OAAS,GAEfC,EAAKL,UAAUM,SAASjB,IACpB,EAAtBc,EAAaV,QAAcU,EAAaA,EAAaV,OAAS,GAAGJ,QAAUA,IAGxEc,EAAaV,QAAUK,aACZS,UAGFC,KAAK,uBAGXC,KAAKC,MAAM,CAAErB,QAAOC,sBAGnBqB,IAAIR,gCAIPP,QAAQQ,qCAGPQ,eCxCG,iBACLC,UACCC,mBAAmBD,oBAEpBA,UACCE,mBAAmBF,KCHxBG,eAAiB,kBAER,kBACJC,UACAC,MAAMD,GAAME,OAAOH,4BCNf,2FACmD,GAA3CI,IAAAA,UAAOC,gBAAAA,aAAkB,KAAIC,IAAAA,iBACzCA,EACHA,EAAUC,MAAM,KAAKC,IAAI,mBAAWJ,OAAUK,IAAQC,KAAK,KACxDN,GAAQC,OAAuBA,EAAoB,YCI/C,kHCRA,gBAMNM,UACE,IAAIC,QAAQ,uBACNC,EAASF,aCJX"}